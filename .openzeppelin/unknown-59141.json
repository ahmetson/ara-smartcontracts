{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x0011764BfeeB78859dD044023AF6b6b6e17715f7",
      "txHash": "0x8a9215eac05bb59dcdc1f4ee81469a59aa756ffee8da3699dc35f1da7d20f21e",
      "kind": "transparent"
    }
  ],
  "impls": {
    "1ce64c54056896db5a64188bb2b9601fb100e8c4a8402cca21ba0f5a8a8ac21f": {
      "address": "0xD6dffF953AF507C7934F431d7b020d7C253377c3",
      "txHash": "0x87c6e9884e8153fb00a3d24a73f513bf9ea82cf88f6ca68e9291ae3a3e33c132",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "dao",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IERC20)1131",
            "contract": "ProjectCheckToken",
            "src": "contracts\\project\\ProjectCheckToken.sol:16"
          },
          {
            "label": "main",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IERC20)1131",
            "contract": "ProjectCheckToken",
            "src": "contracts\\project\\ProjectCheckToken.sol:17"
          },
          {
            "label": "collaterals",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ProjectCheckToken",
            "src": "contracts\\project\\ProjectCheckToken.sol:48"
          },
          {
            "label": "projectId",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "ProjectCheckToken",
            "src": "contracts\\project\\ProjectCheckToken.sol:50"
          },
          {
            "label": "projects",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_uint256,t_struct(Project)1215_storage)",
            "contract": "ProjectCheckToken",
            "src": "contracts\\project\\ProjectCheckToken.sol:52"
          },
          {
            "label": "newProjectVotings",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_uint256,t_struct(NewProject)1200_storage)",
            "contract": "ProjectCheckToken",
            "src": "contracts\\project\\ProjectCheckToken.sol:53"
          },
          {
            "label": "collateralVotings",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_address,t_struct(CollateralVoting)1230_storage)",
            "contract": "ProjectCheckToken",
            "src": "contracts\\project\\ProjectCheckToken.sol:55"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC20Storage)91_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(InitializableStorage)10_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_contract(IERC20)1131": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(CollateralVoting)1230_storage)": {
            "label": "mapping(address => struct ProjectCheckToken.CollateralVoting)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(NewProject)1200_storage)": {
            "label": "mapping(uint256 => struct ProjectCheckToken.NewProject)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Project)1215_storage)": {
            "label": "mapping(uint256 => struct ProjectCheckToken.Project)",
            "numberOfBytes": "32"
          },
          "t_struct(CollateralVoting)1230_storage": {
            "label": "struct ProjectCheckToken.CollateralVoting",
            "members": [
              {
                "label": "votingPeriod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "timeStart",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "actionTaken",
                "type": "t_bool",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "countYes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "countNo",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "voted",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(NewProject)1200_storage": {
            "label": "struct ProjectCheckToken.NewProject",
            "members": [
              {
                "label": "params",
                "type": "t_struct(Project)1215_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "timeStart",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "actionTaken",
                "type": "t_bool",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "countYes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "countNo",
                "type": "t_uint256",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "votingPeriod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "voted",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "12"
              }
            ],
            "numberOfBytes": "416"
          },
          "t_struct(Project)1215_storage": {
            "label": "struct ProjectCheckToken.Project",
            "members": [
              {
                "label": "maintainer",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "period",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "minted",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "limit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "cancelled",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:38",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:45",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    }
  }
}
