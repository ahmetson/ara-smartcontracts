{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x080f9A2FA8996d54ff62Ce841C9390Dc26f6dEf5",
      "txHash": "0xaf297a5bccb85ef733e6abea2970dd7b4d6a8f30397f893efebd8530083dfac0",
      "kind": "transparent"
    },
    {
      "address": "0x9e0B9f1d118Cf352e7b7303f3735cc8a1b4d2E40",
      "txHash": "0x06bc00b2ee2152972256333d516fbea4ad017b400239398be1675d7216abde71",
      "kind": "transparent"
    },
    {
      "address": "0x2F6735180127b40a35ed65E024EC01659C54d47e",
      "txHash": "0x231f7046915d305b1e53cc627bf1ebaf2cf3edc09dd83b59de39318061e649db",
      "kind": "transparent"
    },
    {
      "address": "0x3D22D1C81a01D7FA4B319eA4FEFFE413E3085Ab8",
      "txHash": "0x263dec9a7b39e092b1591910007fd49e9e81eb6b874ed6ccfb457b282d9fa1b6",
      "kind": "transparent"
    },
    {
      "address": "0x5B91Eb2eA0F6b61FfF4a85d6421A940A842F3f2b",
      "txHash": "0x24c8bf369b67b192a04add3b8b8f011b855dd4c2fd815b4bced77dd1f196baa2",
      "kind": "transparent"
    },
    {
      "address": "0x6e7F3BD30c9aacFf37e07E790f156D95b52b0834",
      "txHash": "0x7daf9f6f7314169d16658e905b9bc28bf8ed5904d53bf72844134a07f79c4f39",
      "kind": "transparent"
    },
    {
      "address": "0xac95cFE35355C90765b5129F0AB1B890DE53bA22",
      "txHash": "0xf9c7f2cce68bad72d2d0d91c119da1ab5b3af50e67fde8a618ef1a2d4b99cc35",
      "kind": "transparent"
    }
  ],
  "impls": {
    "32b0316ab105e3d9fc49a1a7a745a9120733db72ce90dfe7deb4f1bdee81abb0": {
      "address": "0x1Db950B957fD7Dc27d47042C4af62a0A342A6592",
      "txHash": "0x3e0c8fb30c0127ef3f5634e5eb27108613604cf805e31e3627c251854a2447ae",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)25_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)35_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ERC20CappedStorage)253_storage": {
            "label": "struct ERC20CappedUpgradeable.ERC20CappedStorage",
            "members": [
              {
                "label": "_cap",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ERC20Storage)176_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(InitializableStorage)95_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)25_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20Capped": [
            {
              "contract": "ERC20CappedUpgradeable",
              "label": "_cap",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol:15",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "af14e1571a69957b5ccade334047f85918d74ae0b8f56bcf7d151f4ec330c825": {
      "address": "0x1DE0378293d301d417e75738c9C9D33f5b57d8c0",
      "txHash": "0xc7694f052620ec54b1d21d01ce7dd1e2b268629e43e2034d3674215f70bc6f7e",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "noBridgeEndTime",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:52"
          },
          {
            "label": "bridge",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:53"
          },
          {
            "label": "araToken",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:54"
          },
          {
            "label": "checkToken",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:55"
          },
          {
            "label": "mainToken",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:56"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:57"
          },
          {
            "label": "vestingContracts",
            "offset": 0,
            "slot": "6",
            "type": "t_array(t_address)8_storage",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:58"
          },
          {
            "label": "bridgeVoting",
            "offset": 0,
            "slot": "14",
            "type": "t_struct(BridgeVoting)2297_storage",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:59"
          },
          {
            "label": "collaterals",
            "offset": 0,
            "slot": "20",
            "type": "t_mapping(t_address,t_struct(Collateral)2271_storage)",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:61"
          },
          {
            "label": "rounds",
            "offset": 0,
            "slot": "21",
            "type": "t_mapping(t_uint8,t_struct(Round)2282_storage)",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:62"
          },
          {
            "label": "vestings",
            "offset": 0,
            "slot": "22",
            "type": "t_mapping(t_uint8,t_address)",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:63"
          },
          {
            "label": "collateralVotings",
            "offset": 0,
            "slot": "23",
            "type": "t_mapping(t_address,t_struct(CollateralVoting)2313_storage)",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:64"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)78_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)27_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)8_storage": {
            "label": "address[8]",
            "numberOfBytes": "256"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Collateral)2271_storage)": {
            "label": "mapping(address => struct Minter.Collateral)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(CollateralVoting)2313_storage)": {
            "label": "mapping(address => struct Minter.CollateralVoting)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_address)": {
            "label": "mapping(uint8 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_struct(Round)2282_storage)": {
            "label": "mapping(uint8 => struct Minter.Round)",
            "numberOfBytes": "32"
          },
          "t_struct(BridgeVoting)2297_storage": {
            "label": "struct Minter.BridgeVoting",
            "members": [
              {
                "label": "bridge",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "timeStart",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "actionTaken",
                "type": "t_bool",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "countYes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "countNo",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "voted",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(Collateral)2271_storage": {
            "label": "struct Minter.Collateral",
            "members": [
              {
                "label": "feedDecimals",
                "type": "t_uint8",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokenDecimals",
                "type": "t_uint8",
                "offset": 1,
                "slot": "0"
              },
              {
                "label": "feedAddr",
                "type": "t_address",
                "offset": 2,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(CollateralVoting)2313_storage": {
            "label": "struct Minter.CollateralVoting",
            "members": [
              {
                "label": "params",
                "type": "t_struct(Collateral)2271_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "timeStart",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "actionTaken",
                "type": "t_bool",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "countYes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "countNo",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "voted",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(Round)2282_storage": {
            "label": "struct Minter.Round",
            "members": [
              {
                "label": "cap",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "pricePerToken",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "minted",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "minUsd",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "maxUsd",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "a9ac49ad1cbc179d71ddac62d4caa0187f943425dc107f59879fbf24606ccd0e": {
      "address": "0x0e6df9cE6F557398974B21DB86fb22A0AeB24c6E",
      "txHash": "0xb174fe588c008582216f5edb0afc010a461a39b3480402c63ac4359a00fdddba",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "ara",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IERC20)1372",
            "contract": "CHECKToken",
            "src": "contracts\\CHECKToken.sol:17"
          },
          {
            "label": "main",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IERC20)1372",
            "contract": "CHECKToken",
            "src": "contracts\\CHECKToken.sol:18"
          },
          {
            "label": "minter",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(IMinter)2234",
            "contract": "CHECKToken",
            "src": "contracts\\CHECKToken.sol:19"
          },
          {
            "label": "projectId",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "CHECKToken",
            "src": "contracts\\CHECKToken.sol:39"
          },
          {
            "label": "projects",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_uint256,t_struct(Project)1457_storage)",
            "contract": "CHECKToken",
            "src": "contracts\\CHECKToken.sol:41"
          },
          {
            "label": "newProjectVotings",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_uint256,t_struct(NewProject)1444_storage)",
            "contract": "CHECKToken",
            "src": "contracts\\CHECKToken.sol:42"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC20Storage)159_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(InitializableStorage)78_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_contract(IERC20)1372": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(IMinter)2234": {
            "label": "contract IMinter",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(NewProject)1444_storage)": {
            "label": "mapping(uint256 => struct CHECKToken.NewProject)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Project)1457_storage)": {
            "label": "mapping(uint256 => struct CHECKToken.Project)",
            "numberOfBytes": "32"
          },
          "t_struct(NewProject)1444_storage": {
            "label": "struct CHECKToken.NewProject",
            "members": [
              {
                "label": "params",
                "type": "t_struct(Project)1457_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "timeStart",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "actionTaken",
                "type": "t_bool",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "countYes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "countNo",
                "type": "t_uint256",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "voted",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "10"
              }
            ],
            "numberOfBytes": "352"
          },
          "t_struct(Project)1457_storage": {
            "label": "struct CHECKToken.Project",
            "members": [
              {
                "label": "maintainer",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "period",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "minted",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "cancelled",
                "type": "t_bool",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:38",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:45",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "3582503aff5e565c7945887829cc98a703f903a90c7a7276e6e7a62a77ab59d5": {
      "address": "0xaf260406181134A4571Fc5f12e03D98011E6Ca00",
      "txHash": "0xb7b8dbf7bb1fb3c66b3ab9c41e8eb9103ad3382f70c07344c39aa7f3dcb36de6",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "noBridgeEndTime",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:54"
          },
          {
            "label": "bridge",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:55"
          },
          {
            "label": "araToken",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:56"
          },
          {
            "label": "checkToken",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:57"
          },
          {
            "label": "mainToken",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:58"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:59"
          },
          {
            "label": "vestingContracts",
            "offset": 0,
            "slot": "6",
            "type": "t_array(t_address)8_storage",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:60"
          },
          {
            "label": "bridgeVoting",
            "offset": 0,
            "slot": "14",
            "type": "t_struct(BridgeVoting)3934_storage",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:61"
          },
          {
            "label": "collaterals",
            "offset": 0,
            "slot": "20",
            "type": "t_mapping(t_address,t_struct(Collateral)3908_storage)",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:63"
          },
          {
            "label": "rounds",
            "offset": 0,
            "slot": "21",
            "type": "t_mapping(t_uint8,t_struct(Round)3919_storage)",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:64"
          },
          {
            "label": "vestings",
            "offset": 0,
            "slot": "22",
            "type": "t_mapping(t_uint8,t_address)",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:65"
          },
          {
            "label": "collateralVotings",
            "offset": 0,
            "slot": "23",
            "type": "t_mapping(t_address,t_struct(CollateralVoting)3950_storage)",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:66"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)163_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)112_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)382_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)8_storage": {
            "label": "address[8]",
            "numberOfBytes": "256"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Collateral)3908_storage)": {
            "label": "mapping(address => struct Minter.Collateral)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(CollateralVoting)3950_storage)": {
            "label": "mapping(address => struct Minter.CollateralVoting)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_address)": {
            "label": "mapping(uint8 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_struct(Round)3919_storage)": {
            "label": "mapping(uint8 => struct Minter.Round)",
            "numberOfBytes": "32"
          },
          "t_struct(BridgeVoting)3934_storage": {
            "label": "struct Minter.BridgeVoting",
            "members": [
              {
                "label": "bridge",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "timeStart",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "actionTaken",
                "type": "t_bool",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "countYes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "countNo",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "voted",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(Collateral)3908_storage": {
            "label": "struct Minter.Collateral",
            "members": [
              {
                "label": "feedDecimals",
                "type": "t_uint8",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokenDecimals",
                "type": "t_uint8",
                "offset": 1,
                "slot": "0"
              },
              {
                "label": "feedAddr",
                "type": "t_address",
                "offset": 2,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(CollateralVoting)3950_storage": {
            "label": "struct Minter.CollateralVoting",
            "members": [
              {
                "label": "params",
                "type": "t_struct(Collateral)3908_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "timeStart",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "actionTaken",
                "type": "t_bool",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "countYes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "countNo",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "voted",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(Round)3919_storage": {
            "label": "struct Minter.Round",
            "members": [
              {
                "label": "cap",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "pricePerToken",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "minted",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "minUsd",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "maxUsd",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "b8f758e99e933ab67f0606d50ecd8f0fde5469e87bb2afbebda251f1a1977a27": {
      "address": "0xD18af707Ba1bb5dB3c9cC4a693e05b01D4d3f910",
      "txHash": "0x03ab92a268cd4830f1745f90fda5bbb93119499a18950169fa2ddb94b6743b72",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "ara",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IERC20)2132",
            "contract": "CHECKToken",
            "src": "contracts\\CHECKToken.sol:17"
          },
          {
            "label": "main",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IERC20)2132",
            "contract": "CHECKToken",
            "src": "contracts\\CHECKToken.sol:18"
          },
          {
            "label": "minter",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(IMinter)3123",
            "contract": "CHECKToken",
            "src": "contracts\\CHECKToken.sol:19"
          },
          {
            "label": "projectId",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "CHECKToken",
            "src": "contracts\\CHECKToken.sol:39"
          },
          {
            "label": "projects",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_uint256,t_struct(Project)2294_storage)",
            "contract": "CHECKToken",
            "src": "contracts\\CHECKToken.sol:41"
          },
          {
            "label": "newProjectVotings",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_uint256,t_struct(NewProject)2281_storage)",
            "contract": "CHECKToken",
            "src": "contracts\\CHECKToken.sol:42"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC20Storage)244_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(InitializableStorage)163_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_contract(IERC20)2132": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(IMinter)3123": {
            "label": "contract IMinter",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(NewProject)2281_storage)": {
            "label": "mapping(uint256 => struct CHECKToken.NewProject)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Project)2294_storage)": {
            "label": "mapping(uint256 => struct CHECKToken.Project)",
            "numberOfBytes": "32"
          },
          "t_struct(NewProject)2281_storage": {
            "label": "struct CHECKToken.NewProject",
            "members": [
              {
                "label": "params",
                "type": "t_struct(Project)2294_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "timeStart",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "actionTaken",
                "type": "t_bool",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "countYes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "countNo",
                "type": "t_uint256",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "voted",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "10"
              }
            ],
            "numberOfBytes": "352"
          },
          "t_struct(Project)2294_storage": {
            "label": "struct CHECKToken.Project",
            "members": [
              {
                "label": "maintainer",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "period",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "minted",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "cancelled",
                "type": "t_bool",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:38",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:45",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "25e1818208b88a5750e799680bb26e41c178422b4230e58e7531242eaf2951c3": {
      "address": "0xd0fBFF6E01d494D7898bc5e500C651baA8dc86Bd",
      "txHash": "0x8714b9566f98572ea7cfaa95a2db390b8a5a8abb9ecbe060f0b1725cf322d61f",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "ara",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IERC20)1131",
            "contract": "CHECKToken",
            "src": "contracts\\CHECKToken.sol:17"
          },
          {
            "label": "main",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IERC20)1131",
            "contract": "CHECKToken",
            "src": "contracts\\CHECKToken.sol:18"
          },
          {
            "label": "minter",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(IMinter)2023",
            "contract": "CHECKToken",
            "src": "contracts\\CHECKToken.sol:19"
          },
          {
            "label": "projectId",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "CHECKToken",
            "src": "contracts\\CHECKToken.sol:39"
          },
          {
            "label": "projects",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_uint256,t_struct(Project)1216_storage)",
            "contract": "CHECKToken",
            "src": "contracts\\CHECKToken.sol:41"
          },
          {
            "label": "newProjectVotings",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_uint256,t_struct(NewProject)1203_storage)",
            "contract": "CHECKToken",
            "src": "contracts\\CHECKToken.sol:42"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC20Storage)91_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(InitializableStorage)10_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_contract(IERC20)1131": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(IMinter)2023": {
            "label": "contract IMinter",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(NewProject)1203_storage)": {
            "label": "mapping(uint256 => struct CHECKToken.NewProject)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Project)1216_storage)": {
            "label": "mapping(uint256 => struct CHECKToken.Project)",
            "numberOfBytes": "32"
          },
          "t_struct(NewProject)1203_storage": {
            "label": "struct CHECKToken.NewProject",
            "members": [
              {
                "label": "params",
                "type": "t_struct(Project)1216_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "timeStart",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "actionTaken",
                "type": "t_bool",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "countYes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "countNo",
                "type": "t_uint256",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "voted",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "10"
              }
            ],
            "numberOfBytes": "352"
          },
          "t_struct(Project)1216_storage": {
            "label": "struct CHECKToken.Project",
            "members": [
              {
                "label": "maintainer",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "period",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "minted",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "cancelled",
                "type": "t_bool",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:38",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:45",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    }
  }
}
