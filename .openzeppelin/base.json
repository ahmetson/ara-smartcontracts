{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x8fAd4d86b6cc14798882B607cD62fbdc3b5a258c",
      "txHash": "0x9558b4e6d133931cd2609f14d7a1ca884f4bfa4c09efe6591ab9a17d056f326a",
      "kind": "transparent"
    },
    {
      "address": "0xE20A78EFA6A6f14CE1229f2CF34082ABb78e92Fd",
      "txHash": "0xa1fb5b62593fc395777ff97b117033cf048d93d586b6041466790b3d3417b173",
      "kind": "transparent"
    },
    {
      "address": "0x727E72ad13910680378d3E5E4AaA188944da867B",
      "txHash": "0x32696d8498015e3ef4c8c8438da102219cc493d311cf7fbe40d34b72d4c9b0c2",
      "kind": "transparent"
    },
    {
      "address": "0xdCF8f610f631eE582dB547066392B2675DF71E7e",
      "txHash": "0xf2662ce2c52223a4bc1ac36b21793878db23e9305729b70a60d91664b35f3bd1",
      "kind": "transparent"
    },
    {
      "address": "0x72Ed11B14C69D6C9faE5544dE44e2f9E27D1f81C",
      "txHash": "0xd144f826bcb808672b979da00729845def1e9bcc78f4c90e30659823873a7f42",
      "kind": "transparent"
    },
    {
      "address": "0xD38359e85a064EDF54D4Bc017c92Af2AcDa194Fa",
      "txHash": "0x8de012e92f3b50f677058440993894cd2f3178eeca11c546a284c9243f3a4e98",
      "kind": "transparent"
    },
    {
      "address": "0x040eEE6D8da3092381Bc9DFaB8fD4A0A9D8eEBDa",
      "txHash": "0x5d74f0c0ea9c98c0c522a22f11ad521132726574a25af4c923c84b45f5b22a2f",
      "kind": "transparent"
    },
    {
      "address": "0x58035DC04D0c05b43396a2d7436F87E5C9F380f6",
      "txHash": "0xd2c3c74373e6b84cb8a9639a0d36891836aab12d45f11cf8ba6f98c319aaef86",
      "kind": "transparent"
    },
    {
      "address": "0x2470aEf262166d338788Fef932dCeCCfdDC60206",
      "txHash": "0x4fb2677908bce9070aaafdcd290c669f9ac6129fc12d56faad7555452bc79802",
      "kind": "transparent"
    },
    {
      "address": "0x9C0aCC45CEcB50444c0Ce3f29e822fEFF64ff401",
      "txHash": "0x43592fa4543a62934c27b6bb42c5c9f745a04aa14985ea43a170a8dd6cc462d6",
      "kind": "transparent"
    },
    {
      "address": "0x82CB92b8492FA45b2AaF30d362B6E3feaC9c8E71",
      "txHash": "0xfe43453140a66a10f9430a059a5bc16f5357694047500c43492068e6d1ab30e1",
      "kind": "transparent"
    }
  ],
  "impls": {
    "bbd0dde6f80b4c1852fa5d1fc140ddf60a90686e4fb4c802e6d7b7499b8df123": {
      "address": "0x8025Bf54c3b1449648055aB4428254713dD9922D",
      "txHash": "0x96e1f4a9ffc2ef5ea34b83f0ddcc8b9574a65cc54e512df33aa5165d5cf4af54",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)25_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)35_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ERC20CappedStorage)253_storage": {
            "label": "struct ERC20CappedUpgradeable.ERC20CappedStorage",
            "members": [
              {
                "label": "_cap",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ERC20Storage)176_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(InitializableStorage)95_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)25_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20Capped": [
            {
              "contract": "ERC20CappedUpgradeable",
              "label": "_cap",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20CappedUpgradeable.sol:15",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:38",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:45",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "af0233ef60ab6667b090433701b25709e3a8619318731cc44a63fbd58cbd46f2": {
      "address": "0x2ddb8522230A7C6b59b6EF185163fd33B5C634bb",
      "txHash": "0x97984866ba9ed35cec4c8bd2835f7b68081a52499c60741e2838f1aa7fea3a80",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "ara",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IERC20)2132",
            "contract": "MAINToken",
            "src": "contracts\\MAINToken.sol:19"
          },
          {
            "label": "sessionId",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "MAINToken",
            "src": "contracts\\MAINToken.sol:31"
          },
          {
            "label": "receivershipId",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "MAINToken",
            "src": "contracts\\MAINToken.sol:32"
          },
          {
            "label": "leader",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "MAINToken",
            "src": "contracts\\MAINToken.sol:33"
          },
          {
            "label": "revokes",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_uint256,t_struct(Revoke)3185_storage)",
            "contract": "MAINToken",
            "src": "contracts\\MAINToken.sol:35"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC20Storage)244_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(InitializableStorage)163_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_contract(IERC20)2132": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Revoke)3185_storage)": {
            "label": "mapping(uint256 => struct MAINToken.Revoke)",
            "numberOfBytes": "32"
          },
          "t_struct(Revoke)3185_storage": {
            "label": "struct MAINToken.Revoke",
            "members": [
              {
                "label": "from",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "to",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "timeStart",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "actionTaken",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "countYes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "countNo",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "voted",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              }
            ],
            "numberOfBytes": "256"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:38",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:45",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "3582503aff5e565c7945887829cc98a703f903a90c7a7276e6e7a62a77ab59d5": {
      "address": "0x1D6FB66baDffd4EBD60df83178F8BD34c7CEbeca",
      "txHash": "0x9158575aec790e00943eacc16c0421b80190e355e0b2e6243cfb0da0426c0bd4",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "noBridgeEndTime",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:54"
          },
          {
            "label": "bridge",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:55"
          },
          {
            "label": "araToken",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:56"
          },
          {
            "label": "checkToken",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:57"
          },
          {
            "label": "mainToken",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:58"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:59"
          },
          {
            "label": "vestingContracts",
            "offset": 0,
            "slot": "6",
            "type": "t_array(t_address)8_storage",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:60"
          },
          {
            "label": "bridgeVoting",
            "offset": 0,
            "slot": "14",
            "type": "t_struct(BridgeVoting)4499_storage",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:61"
          },
          {
            "label": "collaterals",
            "offset": 0,
            "slot": "20",
            "type": "t_mapping(t_address,t_struct(Collateral)4473_storage)",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:63"
          },
          {
            "label": "rounds",
            "offset": 0,
            "slot": "21",
            "type": "t_mapping(t_uint8,t_struct(Round)4484_storage)",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:64"
          },
          {
            "label": "vestings",
            "offset": 0,
            "slot": "22",
            "type": "t_mapping(t_uint8,t_address)",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:65"
          },
          {
            "label": "collateralVotings",
            "offset": 0,
            "slot": "23",
            "type": "t_mapping(t_address,t_struct(CollateralVoting)4515_storage)",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:66"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)163_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)112_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)382_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)8_storage": {
            "label": "address[8]",
            "numberOfBytes": "256"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Collateral)4473_storage)": {
            "label": "mapping(address => struct Minter.Collateral)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(CollateralVoting)4515_storage)": {
            "label": "mapping(address => struct Minter.CollateralVoting)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_address)": {
            "label": "mapping(uint8 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_struct(Round)4484_storage)": {
            "label": "mapping(uint8 => struct Minter.Round)",
            "numberOfBytes": "32"
          },
          "t_struct(BridgeVoting)4499_storage": {
            "label": "struct Minter.BridgeVoting",
            "members": [
              {
                "label": "bridge",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "timeStart",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "actionTaken",
                "type": "t_bool",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "countYes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "countNo",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "voted",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(Collateral)4473_storage": {
            "label": "struct Minter.Collateral",
            "members": [
              {
                "label": "feedDecimals",
                "type": "t_uint8",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokenDecimals",
                "type": "t_uint8",
                "offset": 1,
                "slot": "0"
              },
              {
                "label": "feedAddr",
                "type": "t_address",
                "offset": 2,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(CollateralVoting)4515_storage": {
            "label": "struct Minter.CollateralVoting",
            "members": [
              {
                "label": "params",
                "type": "t_struct(Collateral)4473_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "timeStart",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "actionTaken",
                "type": "t_bool",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "countYes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "countNo",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "voted",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(Round)4484_storage": {
            "label": "struct Minter.Round",
            "members": [
              {
                "label": "cap",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "pricePerToken",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "minted",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "minUsd",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "maxUsd",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "4ab518640b91a572a93e253fb2bee2b8eaaf19aa137f4e3529903e5cca676c84": {
      "address": "0x36b2fC7dFde2FbfC3aa093E96677a98502829187",
      "txHash": "0x10e04cae53c8ef0b6b3d84f6a08ad5f73a790384bf1d202e9d669f72383b1401",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "ara",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IERC20)2647",
            "contract": "CHECKToken",
            "src": "contracts\\CHECKToken.sol:22"
          },
          {
            "label": "main",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IERC20)2647",
            "contract": "CHECKToken",
            "src": "contracts\\CHECKToken.sol:23"
          },
          {
            "label": "minter",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(IMinter)3687",
            "contract": "CHECKToken",
            "src": "contracts\\CHECKToken.sol:24"
          },
          {
            "label": "projectId",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "CHECKToken",
            "src": "contracts\\CHECKToken.sol:44"
          },
          {
            "label": "projects",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_uint256,t_struct(Project)2846_storage)",
            "contract": "CHECKToken",
            "src": "contracts\\CHECKToken.sol:46"
          },
          {
            "label": "newProjectVotings",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_uint256,t_struct(NewProject)2833_storage)",
            "contract": "CHECKToken",
            "src": "contracts\\CHECKToken.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC20Storage)244_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(InitializableStorage)163_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_contract(IERC20)2647": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(IMinter)3687": {
            "label": "contract IMinter",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(NewProject)2833_storage)": {
            "label": "mapping(uint256 => struct CHECKToken.NewProject)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Project)2846_storage)": {
            "label": "mapping(uint256 => struct CHECKToken.Project)",
            "numberOfBytes": "32"
          },
          "t_struct(NewProject)2833_storage": {
            "label": "struct CHECKToken.NewProject",
            "members": [
              {
                "label": "params",
                "type": "t_struct(Project)2846_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "timeStart",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "actionTaken",
                "type": "t_bool",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "countYes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "countNo",
                "type": "t_uint256",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "voted",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "10"
              }
            ],
            "numberOfBytes": "352"
          },
          "t_struct(Project)2846_storage": {
            "label": "struct CHECKToken.Project",
            "members": [
              {
                "label": "maintainer",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "period",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "minted",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "cancelled",
                "type": "t_bool",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:38",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:45",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "cc2293356e50bb665e836c36a25b7abff9eb827d4c80a882210e303b6ffb68c4": {
      "address": "0x404cBb17d7Da06981D3884AB39466d1C1B85942a",
      "txHash": "0x0237aa4c2ad824cae63395b88a4eeffe50296b96327c446ef7feb665f7699078",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "noBridgeEndTime",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:54"
          },
          {
            "label": "bridge",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:55"
          },
          {
            "label": "araToken",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:56"
          },
          {
            "label": "checkToken",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:57"
          },
          {
            "label": "mainToken",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:58"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:59"
          },
          {
            "label": "vestingContracts",
            "offset": 0,
            "slot": "6",
            "type": "t_array(t_address)8_storage",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:60"
          },
          {
            "label": "bridgeVoting",
            "offset": 0,
            "slot": "14",
            "type": "t_struct(BridgeVoting)844_storage",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:61"
          },
          {
            "label": "collaterals",
            "offset": 0,
            "slot": "20",
            "type": "t_mapping(t_address,t_struct(Collateral)818_storage)",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:63"
          },
          {
            "label": "rounds",
            "offset": 0,
            "slot": "21",
            "type": "t_mapping(t_uint8,t_struct(Round)829_storage)",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:64"
          },
          {
            "label": "vestings",
            "offset": 0,
            "slot": "22",
            "type": "t_mapping(t_uint8,t_address)",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:65"
          },
          {
            "label": "collateralVotings",
            "offset": 0,
            "slot": "23",
            "type": "t_mapping(t_address,t_struct(CollateralVoting)860_storage)",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:66"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)78_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)27_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)153_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)8_storage": {
            "label": "address[8]",
            "numberOfBytes": "256"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Collateral)818_storage)": {
            "label": "mapping(address => struct Minter.Collateral)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(CollateralVoting)860_storage)": {
            "label": "mapping(address => struct Minter.CollateralVoting)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_address)": {
            "label": "mapping(uint8 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_struct(Round)829_storage)": {
            "label": "mapping(uint8 => struct Minter.Round)",
            "numberOfBytes": "32"
          },
          "t_struct(BridgeVoting)844_storage": {
            "label": "struct Minter.BridgeVoting",
            "members": [
              {
                "label": "bridge",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "timeStart",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "actionTaken",
                "type": "t_bool",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "countYes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "countNo",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "voted",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(Collateral)818_storage": {
            "label": "struct Minter.Collateral",
            "members": [
              {
                "label": "feedDecimals",
                "type": "t_uint8",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokenDecimals",
                "type": "t_uint8",
                "offset": 1,
                "slot": "0"
              },
              {
                "label": "feedAddr",
                "type": "t_address",
                "offset": 2,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(CollateralVoting)860_storage": {
            "label": "struct Minter.CollateralVoting",
            "members": [
              {
                "label": "params",
                "type": "t_struct(Collateral)818_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "timeStart",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "actionTaken",
                "type": "t_bool",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "countYes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "countNo",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "voted",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(Round)829_storage": {
            "label": "struct Minter.Round",
            "members": [
              {
                "label": "cap",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "pricePerToken",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "minted",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "minUsd",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "maxUsd",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "511ad15d8cafd47e2095add49aff680fe3ed09dcc29b20594db2243814104c4c": {
      "address": "0x7dc6B6A0B780aeB895936a1ED19ee46CC69a2397",
      "txHash": "0x57433aa2127c2f58a31f556e3cd14788a07b4af2cf8a8cf7f86f2a974a95e787",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "noBridgeEndTime",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:54"
          },
          {
            "label": "bridge",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:55"
          },
          {
            "label": "araToken",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:56"
          },
          {
            "label": "checkToken",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:57"
          },
          {
            "label": "mainToken",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:58"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:59"
          },
          {
            "label": "vestingContracts",
            "offset": 0,
            "slot": "6",
            "type": "t_array(t_address)8_storage",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:60"
          },
          {
            "label": "bridgeVoting",
            "offset": 0,
            "slot": "14",
            "type": "t_struct(BridgeVoting)844_storage",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:61"
          },
          {
            "label": "collaterals",
            "offset": 0,
            "slot": "20",
            "type": "t_mapping(t_address,t_struct(Collateral)818_storage)",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:63"
          },
          {
            "label": "rounds",
            "offset": 0,
            "slot": "21",
            "type": "t_mapping(t_uint8,t_struct(Round)829_storage)",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:64"
          },
          {
            "label": "vestings",
            "offset": 0,
            "slot": "22",
            "type": "t_mapping(t_uint8,t_address)",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:65"
          },
          {
            "label": "collateralVotings",
            "offset": 0,
            "slot": "23",
            "type": "t_mapping(t_address,t_struct(CollateralVoting)860_storage)",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:66"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)78_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)27_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)153_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)8_storage": {
            "label": "address[8]",
            "numberOfBytes": "256"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Collateral)818_storage)": {
            "label": "mapping(address => struct Minter.Collateral)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(CollateralVoting)860_storage)": {
            "label": "mapping(address => struct Minter.CollateralVoting)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_address)": {
            "label": "mapping(uint8 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_struct(Round)829_storage)": {
            "label": "mapping(uint8 => struct Minter.Round)",
            "numberOfBytes": "32"
          },
          "t_struct(BridgeVoting)844_storage": {
            "label": "struct Minter.BridgeVoting",
            "members": [
              {
                "label": "bridge",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "timeStart",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "actionTaken",
                "type": "t_bool",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "countYes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "countNo",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "voted",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(Collateral)818_storage": {
            "label": "struct Minter.Collateral",
            "members": [
              {
                "label": "feedDecimals",
                "type": "t_uint8",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokenDecimals",
                "type": "t_uint8",
                "offset": 1,
                "slot": "0"
              },
              {
                "label": "feedAddr",
                "type": "t_address",
                "offset": 2,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(CollateralVoting)860_storage": {
            "label": "struct Minter.CollateralVoting",
            "members": [
              {
                "label": "params",
                "type": "t_struct(Collateral)818_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "timeStart",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "actionTaken",
                "type": "t_bool",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "countYes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "countNo",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "voted",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(Round)829_storage": {
            "label": "struct Minter.Round",
            "members": [
              {
                "label": "cap",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "pricePerToken",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "minted",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "minUsd",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "maxUsd",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "d217cbdc6059f923c9c135661c013ef42a8fc2fa57aac9ec128458d5ad211455": {
      "address": "0xd38D0B3c57570aAc07250DcfE78bA2E03b383792",
      "txHash": "0x62f5cbce94c303363140b213410b322881a9d347920ed9bb33b06da7327df3c6",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "noBridgeEndTime",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:54"
          },
          {
            "label": "bridge",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:55"
          },
          {
            "label": "araToken",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:56"
          },
          {
            "label": "checkToken",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:57"
          },
          {
            "label": "mainToken",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:58"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:59"
          },
          {
            "label": "vestingContracts",
            "offset": 0,
            "slot": "6",
            "type": "t_array(t_address)8_storage",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:60"
          },
          {
            "label": "bridgeVoting",
            "offset": 0,
            "slot": "14",
            "type": "t_struct(BridgeVoting)844_storage",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:61"
          },
          {
            "label": "collaterals",
            "offset": 0,
            "slot": "20",
            "type": "t_mapping(t_address,t_struct(Collateral)818_storage)",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:63"
          },
          {
            "label": "rounds",
            "offset": 0,
            "slot": "21",
            "type": "t_mapping(t_uint8,t_struct(Round)829_storage)",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:64"
          },
          {
            "label": "vestings",
            "offset": 0,
            "slot": "22",
            "type": "t_mapping(t_uint8,t_address)",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:65"
          },
          {
            "label": "collateralVotings",
            "offset": 0,
            "slot": "23",
            "type": "t_mapping(t_address,t_struct(CollateralVoting)860_storage)",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:66"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)78_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)27_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)153_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)8_storage": {
            "label": "address[8]",
            "numberOfBytes": "256"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Collateral)818_storage)": {
            "label": "mapping(address => struct Minter.Collateral)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(CollateralVoting)860_storage)": {
            "label": "mapping(address => struct Minter.CollateralVoting)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_address)": {
            "label": "mapping(uint8 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_struct(Round)829_storage)": {
            "label": "mapping(uint8 => struct Minter.Round)",
            "numberOfBytes": "32"
          },
          "t_struct(BridgeVoting)844_storage": {
            "label": "struct Minter.BridgeVoting",
            "members": [
              {
                "label": "bridge",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "timeStart",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "actionTaken",
                "type": "t_bool",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "countYes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "countNo",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "voted",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(Collateral)818_storage": {
            "label": "struct Minter.Collateral",
            "members": [
              {
                "label": "feedDecimals",
                "type": "t_uint8",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokenDecimals",
                "type": "t_uint8",
                "offset": 1,
                "slot": "0"
              },
              {
                "label": "feedAddr",
                "type": "t_address",
                "offset": 2,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(CollateralVoting)860_storage": {
            "label": "struct Minter.CollateralVoting",
            "members": [
              {
                "label": "params",
                "type": "t_struct(Collateral)818_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "timeStart",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "actionTaken",
                "type": "t_bool",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "countYes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "countNo",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "voted",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(Round)829_storage": {
            "label": "struct Minter.Round",
            "members": [
              {
                "label": "cap",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "pricePerToken",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "minted",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "minUsd",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "maxUsd",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "2078773f32cf62d33e430619e2baca8a3700f053707e5974798410ca5fc2ebce": {
      "address": "0x55D2753E9bd88A2d54EA934AC7105089Eb6632F4",
      "txHash": "0x061e73dcc13ae1755fcbcabeb93b6c47c105fa0044bb494cd540465ef29bc972",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "noBridgeEndTime",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:54"
          },
          {
            "label": "bridge",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:55"
          },
          {
            "label": "araToken",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:56"
          },
          {
            "label": "checkToken",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:57"
          },
          {
            "label": "mainToken",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:58"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:59"
          },
          {
            "label": "vestingContracts",
            "offset": 0,
            "slot": "6",
            "type": "t_array(t_address)8_storage",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:60"
          },
          {
            "label": "bridgeVoting",
            "offset": 0,
            "slot": "14",
            "type": "t_struct(BridgeVoting)844_storage",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:61"
          },
          {
            "label": "collaterals",
            "offset": 0,
            "slot": "20",
            "type": "t_mapping(t_address,t_struct(Collateral)818_storage)",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:63"
          },
          {
            "label": "rounds",
            "offset": 0,
            "slot": "21",
            "type": "t_mapping(t_uint8,t_struct(Round)829_storage)",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:64"
          },
          {
            "label": "vestings",
            "offset": 0,
            "slot": "22",
            "type": "t_mapping(t_uint8,t_address)",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:65"
          },
          {
            "label": "collateralVotings",
            "offset": 0,
            "slot": "23",
            "type": "t_mapping(t_address,t_struct(CollateralVoting)860_storage)",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:66"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)78_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)27_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)153_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)8_storage": {
            "label": "address[8]",
            "numberOfBytes": "256"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Collateral)818_storage)": {
            "label": "mapping(address => struct Minter.Collateral)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(CollateralVoting)860_storage)": {
            "label": "mapping(address => struct Minter.CollateralVoting)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_address)": {
            "label": "mapping(uint8 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_struct(Round)829_storage)": {
            "label": "mapping(uint8 => struct Minter.Round)",
            "numberOfBytes": "32"
          },
          "t_struct(BridgeVoting)844_storage": {
            "label": "struct Minter.BridgeVoting",
            "members": [
              {
                "label": "bridge",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "timeStart",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "actionTaken",
                "type": "t_bool",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "countYes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "countNo",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "voted",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(Collateral)818_storage": {
            "label": "struct Minter.Collateral",
            "members": [
              {
                "label": "feedDecimals",
                "type": "t_uint8",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokenDecimals",
                "type": "t_uint8",
                "offset": 1,
                "slot": "0"
              },
              {
                "label": "feedAddr",
                "type": "t_address",
                "offset": 2,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(CollateralVoting)860_storage": {
            "label": "struct Minter.CollateralVoting",
            "members": [
              {
                "label": "params",
                "type": "t_struct(Collateral)818_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "timeStart",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "actionTaken",
                "type": "t_bool",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "countYes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "countNo",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "voted",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(Round)829_storage": {
            "label": "struct Minter.Round",
            "members": [
              {
                "label": "cap",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "pricePerToken",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "minted",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "minUsd",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "maxUsd",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "965f373819d3ee1a4c4d13cfa806e2e5e1c11b3230fd1bc79d3a75bcf3605e2f": {
      "address": "0x95405055D584a926A066f010A11Cd49254D5232b",
      "txHash": "0xe6d99f5b9f833553e1f3f70888fba57311ac9d2b23c53c8d5672dfab4cf01fd7",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "noBridgeEndTime",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:54"
          },
          {
            "label": "bridge",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:55"
          },
          {
            "label": "araToken",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:56"
          },
          {
            "label": "checkToken",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:57"
          },
          {
            "label": "mainToken",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:58"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:59"
          },
          {
            "label": "vestingContracts",
            "offset": 0,
            "slot": "6",
            "type": "t_array(t_address)8_storage",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:60"
          },
          {
            "label": "bridgeVoting",
            "offset": 0,
            "slot": "14",
            "type": "t_struct(BridgeVoting)844_storage",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:61"
          },
          {
            "label": "collaterals",
            "offset": 0,
            "slot": "20",
            "type": "t_mapping(t_address,t_struct(Collateral)818_storage)",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:63"
          },
          {
            "label": "rounds",
            "offset": 0,
            "slot": "21",
            "type": "t_mapping(t_uint8,t_struct(Round)829_storage)",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:64"
          },
          {
            "label": "vestings",
            "offset": 0,
            "slot": "22",
            "type": "t_mapping(t_uint8,t_address)",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:65"
          },
          {
            "label": "collateralVotings",
            "offset": 0,
            "slot": "23",
            "type": "t_mapping(t_address,t_struct(CollateralVoting)860_storage)",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:66"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)78_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)27_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)153_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)8_storage": {
            "label": "address[8]",
            "numberOfBytes": "256"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Collateral)818_storage)": {
            "label": "mapping(address => struct Minter.Collateral)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(CollateralVoting)860_storage)": {
            "label": "mapping(address => struct Minter.CollateralVoting)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_address)": {
            "label": "mapping(uint8 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_struct(Round)829_storage)": {
            "label": "mapping(uint8 => struct Minter.Round)",
            "numberOfBytes": "32"
          },
          "t_struct(BridgeVoting)844_storage": {
            "label": "struct Minter.BridgeVoting",
            "members": [
              {
                "label": "bridge",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "timeStart",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "actionTaken",
                "type": "t_bool",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "countYes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "countNo",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "voted",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(Collateral)818_storage": {
            "label": "struct Minter.Collateral",
            "members": [
              {
                "label": "feedDecimals",
                "type": "t_uint8",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokenDecimals",
                "type": "t_uint8",
                "offset": 1,
                "slot": "0"
              },
              {
                "label": "feedAddr",
                "type": "t_address",
                "offset": 2,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(CollateralVoting)860_storage": {
            "label": "struct Minter.CollateralVoting",
            "members": [
              {
                "label": "params",
                "type": "t_struct(Collateral)818_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "timeStart",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "actionTaken",
                "type": "t_bool",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "countYes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "countNo",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "voted",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(Round)829_storage": {
            "label": "struct Minter.Round",
            "members": [
              {
                "label": "cap",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "pricePerToken",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "minted",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "minUsd",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "maxUsd",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "9846d556d7933a369e85bab5b4f2114cf7e33b974e961f5cbbf160c7d8f60de2": {
      "address": "0x9396cC15674dEFDF12f77624a757f52B4Cd672D7",
      "txHash": "0xbec79aadc7fefb4d2bde73f60bb1603b02927a6fb6fa45dba98346b05928c3ee",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "noBridgeEndTime",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:54"
          },
          {
            "label": "bridge",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:55"
          },
          {
            "label": "araToken",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:56"
          },
          {
            "label": "checkToken",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:57"
          },
          {
            "label": "mainToken",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:58"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:59"
          },
          {
            "label": "vestingContracts",
            "offset": 0,
            "slot": "6",
            "type": "t_array(t_address)8_storage",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:60"
          },
          {
            "label": "bridgeVoting",
            "offset": 0,
            "slot": "14",
            "type": "t_struct(BridgeVoting)844_storage",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:61"
          },
          {
            "label": "collaterals",
            "offset": 0,
            "slot": "20",
            "type": "t_mapping(t_address,t_struct(Collateral)818_storage)",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:63"
          },
          {
            "label": "rounds",
            "offset": 0,
            "slot": "21",
            "type": "t_mapping(t_uint8,t_struct(Round)829_storage)",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:64"
          },
          {
            "label": "vestings",
            "offset": 0,
            "slot": "22",
            "type": "t_mapping(t_uint8,t_address)",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:65"
          },
          {
            "label": "collateralVotings",
            "offset": 0,
            "slot": "23",
            "type": "t_mapping(t_address,t_struct(CollateralVoting)860_storage)",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:66"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)78_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)27_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)153_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)8_storage": {
            "label": "address[8]",
            "numberOfBytes": "256"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Collateral)818_storage)": {
            "label": "mapping(address => struct Minter.Collateral)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(CollateralVoting)860_storage)": {
            "label": "mapping(address => struct Minter.CollateralVoting)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_address)": {
            "label": "mapping(uint8 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_struct(Round)829_storage)": {
            "label": "mapping(uint8 => struct Minter.Round)",
            "numberOfBytes": "32"
          },
          "t_struct(BridgeVoting)844_storage": {
            "label": "struct Minter.BridgeVoting",
            "members": [
              {
                "label": "bridge",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "timeStart",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "actionTaken",
                "type": "t_bool",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "countYes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "countNo",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "voted",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(Collateral)818_storage": {
            "label": "struct Minter.Collateral",
            "members": [
              {
                "label": "feedDecimals",
                "type": "t_uint8",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokenDecimals",
                "type": "t_uint8",
                "offset": 1,
                "slot": "0"
              },
              {
                "label": "feedAddr",
                "type": "t_address",
                "offset": 2,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(CollateralVoting)860_storage": {
            "label": "struct Minter.CollateralVoting",
            "members": [
              {
                "label": "params",
                "type": "t_struct(Collateral)818_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "timeStart",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "actionTaken",
                "type": "t_bool",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "countYes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "countNo",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "voted",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(Round)829_storage": {
            "label": "struct Minter.Round",
            "members": [
              {
                "label": "cap",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "pricePerToken",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "minted",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "minUsd",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "maxUsd",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "9a76e557f208bae90c8fe75a55e52dab6f7ae27a3c2b7db5469a54a163703e40": {
      "address": "0x76AE0796675a66563bf5C2B14D9080E7109B8dAf",
      "txHash": "0xa991a15f1b116b518e7c3c6c67dc796d64142536f11386e4158c6e8561432382",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "noBridgeEndTime",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:54"
          },
          {
            "label": "bridge",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:55"
          },
          {
            "label": "araToken",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:56"
          },
          {
            "label": "checkToken",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:57"
          },
          {
            "label": "mainToken",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:58"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:59"
          },
          {
            "label": "vestingContracts",
            "offset": 0,
            "slot": "6",
            "type": "t_array(t_address)8_storage",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:60"
          },
          {
            "label": "bridgeVoting",
            "offset": 0,
            "slot": "14",
            "type": "t_struct(BridgeVoting)844_storage",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:61"
          },
          {
            "label": "collaterals",
            "offset": 0,
            "slot": "20",
            "type": "t_mapping(t_address,t_struct(Collateral)818_storage)",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:63"
          },
          {
            "label": "rounds",
            "offset": 0,
            "slot": "21",
            "type": "t_mapping(t_uint8,t_struct(Round)829_storage)",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:64"
          },
          {
            "label": "vestings",
            "offset": 0,
            "slot": "22",
            "type": "t_mapping(t_uint8,t_address)",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:65"
          },
          {
            "label": "collateralVotings",
            "offset": 0,
            "slot": "23",
            "type": "t_mapping(t_address,t_struct(CollateralVoting)860_storage)",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:66"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)78_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)27_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)153_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)8_storage": {
            "label": "address[8]",
            "numberOfBytes": "256"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Collateral)818_storage)": {
            "label": "mapping(address => struct Minter.Collateral)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(CollateralVoting)860_storage)": {
            "label": "mapping(address => struct Minter.CollateralVoting)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_address)": {
            "label": "mapping(uint8 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_struct(Round)829_storage)": {
            "label": "mapping(uint8 => struct Minter.Round)",
            "numberOfBytes": "32"
          },
          "t_struct(BridgeVoting)844_storage": {
            "label": "struct Minter.BridgeVoting",
            "members": [
              {
                "label": "bridge",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "timeStart",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "actionTaken",
                "type": "t_bool",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "countYes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "countNo",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "voted",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(Collateral)818_storage": {
            "label": "struct Minter.Collateral",
            "members": [
              {
                "label": "feedDecimals",
                "type": "t_uint8",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokenDecimals",
                "type": "t_uint8",
                "offset": 1,
                "slot": "0"
              },
              {
                "label": "feedAddr",
                "type": "t_address",
                "offset": 2,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(CollateralVoting)860_storage": {
            "label": "struct Minter.CollateralVoting",
            "members": [
              {
                "label": "params",
                "type": "t_struct(Collateral)818_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "timeStart",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "actionTaken",
                "type": "t_bool",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "countYes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "countNo",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "voted",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(Round)829_storage": {
            "label": "struct Minter.Round",
            "members": [
              {
                "label": "cap",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "pricePerToken",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "minted",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "minUsd",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "maxUsd",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "81502bf04cd666a9db5f9f96469ed52dfdc0c730037faac52b51445cfeab72c6": {
      "address": "0xE9694Df0f3db71c04E6c4562e94B9c8731A2dCdf",
      "txHash": "0x5f8cfed9d1396621e030f03129d0609ea0a11fd8a77112a94a014b19a26e5dc9",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "noBridgeEndTime",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:54"
          },
          {
            "label": "bridge",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:55"
          },
          {
            "label": "araToken",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:56"
          },
          {
            "label": "checkToken",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:57"
          },
          {
            "label": "mainToken",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:58"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:59"
          },
          {
            "label": "vestingContracts",
            "offset": 0,
            "slot": "6",
            "type": "t_array(t_address)8_storage",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:60"
          },
          {
            "label": "bridgeVoting",
            "offset": 0,
            "slot": "14",
            "type": "t_struct(BridgeVoting)844_storage",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:61"
          },
          {
            "label": "collaterals",
            "offset": 0,
            "slot": "20",
            "type": "t_mapping(t_address,t_struct(Collateral)818_storage)",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:63"
          },
          {
            "label": "rounds",
            "offset": 0,
            "slot": "21",
            "type": "t_mapping(t_uint8,t_struct(Round)829_storage)",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:64"
          },
          {
            "label": "vestings",
            "offset": 0,
            "slot": "22",
            "type": "t_mapping(t_uint8,t_address)",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:65"
          },
          {
            "label": "collateralVotings",
            "offset": 0,
            "slot": "23",
            "type": "t_mapping(t_address,t_struct(CollateralVoting)860_storage)",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:66"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)78_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)27_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)153_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)8_storage": {
            "label": "address[8]",
            "numberOfBytes": "256"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Collateral)818_storage)": {
            "label": "mapping(address => struct Minter.Collateral)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(CollateralVoting)860_storage)": {
            "label": "mapping(address => struct Minter.CollateralVoting)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_address)": {
            "label": "mapping(uint8 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_struct(Round)829_storage)": {
            "label": "mapping(uint8 => struct Minter.Round)",
            "numberOfBytes": "32"
          },
          "t_struct(BridgeVoting)844_storage": {
            "label": "struct Minter.BridgeVoting",
            "members": [
              {
                "label": "bridge",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "timeStart",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "actionTaken",
                "type": "t_bool",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "countYes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "countNo",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "voted",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(Collateral)818_storage": {
            "label": "struct Minter.Collateral",
            "members": [
              {
                "label": "feedDecimals",
                "type": "t_uint8",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokenDecimals",
                "type": "t_uint8",
                "offset": 1,
                "slot": "0"
              },
              {
                "label": "feedAddr",
                "type": "t_address",
                "offset": 2,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(CollateralVoting)860_storage": {
            "label": "struct Minter.CollateralVoting",
            "members": [
              {
                "label": "params",
                "type": "t_struct(Collateral)818_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "timeStart",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "actionTaken",
                "type": "t_bool",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "countYes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "countNo",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "voted",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(Round)829_storage": {
            "label": "struct Minter.Round",
            "members": [
              {
                "label": "cap",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "pricePerToken",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "minted",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "minUsd",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "maxUsd",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "4283c802e96e01c50a676faf4f082cfee7815b504d69d9fdc3004b69cf41c9e9": {
      "address": "0x98F722C10284e54FCa49674E61E0889828dA56fB",
      "txHash": "0x6a144f33fa886a6a81093623737cea0a9fb5abf278b9604d920eb980add99375",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "noBridgeEndTime",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:54"
          },
          {
            "label": "bridge",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:55"
          },
          {
            "label": "araToken",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:56"
          },
          {
            "label": "checkToken",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:57"
          },
          {
            "label": "mainToken",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:58"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:59"
          },
          {
            "label": "vestingContracts",
            "offset": 0,
            "slot": "6",
            "type": "t_array(t_address)8_storage",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:60"
          },
          {
            "label": "bridgeVoting",
            "offset": 0,
            "slot": "14",
            "type": "t_struct(BridgeVoting)844_storage",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:61"
          },
          {
            "label": "collaterals",
            "offset": 0,
            "slot": "20",
            "type": "t_mapping(t_address,t_struct(Collateral)818_storage)",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:63"
          },
          {
            "label": "rounds",
            "offset": 0,
            "slot": "21",
            "type": "t_mapping(t_uint8,t_struct(Round)829_storage)",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:64"
          },
          {
            "label": "vestings",
            "offset": 0,
            "slot": "22",
            "type": "t_mapping(t_uint8,t_address)",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:65"
          },
          {
            "label": "collateralVotings",
            "offset": 0,
            "slot": "23",
            "type": "t_mapping(t_address,t_struct(CollateralVoting)860_storage)",
            "contract": "Minter",
            "src": "contracts\\Minter.sol:66"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)78_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)27_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)153_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)8_storage": {
            "label": "address[8]",
            "numberOfBytes": "256"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Collateral)818_storage)": {
            "label": "mapping(address => struct Minter.Collateral)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(CollateralVoting)860_storage)": {
            "label": "mapping(address => struct Minter.CollateralVoting)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_address)": {
            "label": "mapping(uint8 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_struct(Round)829_storage)": {
            "label": "mapping(uint8 => struct Minter.Round)",
            "numberOfBytes": "32"
          },
          "t_struct(BridgeVoting)844_storage": {
            "label": "struct Minter.BridgeVoting",
            "members": [
              {
                "label": "bridge",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "timeStart",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "actionTaken",
                "type": "t_bool",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "countYes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "countNo",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "voted",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(Collateral)818_storage": {
            "label": "struct Minter.Collateral",
            "members": [
              {
                "label": "feedDecimals",
                "type": "t_uint8",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokenDecimals",
                "type": "t_uint8",
                "offset": 1,
                "slot": "0"
              },
              {
                "label": "feedAddr",
                "type": "t_address",
                "offset": 2,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(CollateralVoting)860_storage": {
            "label": "struct Minter.CollateralVoting",
            "members": [
              {
                "label": "params",
                "type": "t_struct(Collateral)818_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "timeStart",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "actionTaken",
                "type": "t_bool",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "countYes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "countNo",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "voted",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(Round)829_storage": {
            "label": "struct Minter.Round",
            "members": [
              {
                "label": "cap",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "pricePerToken",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "minted",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "minUsd",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "maxUsd",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "d10233c26b0c96595d473c05e9d783e39fed154d69c6e40f4a052ec7c9925532": {
      "address": "0xf9f2D0c75BEFb0183835bD0a1dbdF7A022FE0e0F",
      "txHash": "0x30711cfcdad37273fe6803ea56295c8aa624f20c119db73397a6949e09c3c2de",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "ara",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(ERC20)1568",
            "contract": "CHECKToken",
            "src": "contracts\\CHECKToken.sol:22"
          },
          {
            "label": "main",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(ERC20)1568",
            "contract": "CHECKToken",
            "src": "contracts\\CHECKToken.sol:23"
          },
          {
            "label": "minter",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(IMinter)2600",
            "contract": "CHECKToken",
            "src": "contracts\\CHECKToken.sol:24"
          },
          {
            "label": "projectId",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "CHECKToken",
            "src": "contracts\\CHECKToken.sol:44"
          },
          {
            "label": "projects",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_uint256,t_struct(Project)1762_storage)",
            "contract": "CHECKToken",
            "src": "contracts\\CHECKToken.sol:46"
          },
          {
            "label": "newProjectVotings",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_uint256,t_struct(NewProject)1749_storage)",
            "contract": "CHECKToken",
            "src": "contracts\\CHECKToken.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC20Storage)91_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(InitializableStorage)10_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_contract(ERC20)1568": {
            "label": "contract ERC20",
            "numberOfBytes": "20"
          },
          "t_contract(IMinter)2600": {
            "label": "contract IMinter",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(NewProject)1749_storage)": {
            "label": "mapping(uint256 => struct CHECKToken.NewProject)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Project)1762_storage)": {
            "label": "mapping(uint256 => struct CHECKToken.Project)",
            "numberOfBytes": "32"
          },
          "t_struct(NewProject)1749_storage": {
            "label": "struct CHECKToken.NewProject",
            "members": [
              {
                "label": "params",
                "type": "t_struct(Project)1762_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "timeStart",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "actionTaken",
                "type": "t_bool",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "countYes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "countNo",
                "type": "t_uint256",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "voted",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "10"
              }
            ],
            "numberOfBytes": "352"
          },
          "t_struct(Project)1762_storage": {
            "label": "struct CHECKToken.Project",
            "members": [
              {
                "label": "maintainer",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "period",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "minted",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "cancelled",
                "type": "t_bool",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:38",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:45",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "9f0f058446758e910716a0849d93d80ba94bdf6690d10a05916735ee72bc8a6d": {
      "address": "0x72225661CE951dDb1558685D55146dDbb38bc921",
      "txHash": "0xd4e9d7e2bd0965e6eba576b7a91b7a28ce42ad7e62223064f15b92f6ca586bb3",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "ara",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(ERC20)1568",
            "contract": "CHECKToken",
            "src": "contracts\\CHECKToken.sol:22"
          },
          {
            "label": "main",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(ERC20)1568",
            "contract": "CHECKToken",
            "src": "contracts\\CHECKToken.sol:23"
          },
          {
            "label": "minter",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(IMinter)2625",
            "contract": "CHECKToken",
            "src": "contracts\\CHECKToken.sol:24"
          },
          {
            "label": "projectId",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "CHECKToken",
            "src": "contracts\\CHECKToken.sol:44"
          },
          {
            "label": "projects",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_uint256,t_struct(Project)1762_storage)",
            "contract": "CHECKToken",
            "src": "contracts\\CHECKToken.sol:46"
          },
          {
            "label": "newProjectVotings",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_uint256,t_struct(NewProject)1749_storage)",
            "contract": "CHECKToken",
            "src": "contracts\\CHECKToken.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC20Storage)91_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(InitializableStorage)10_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_contract(ERC20)1568": {
            "label": "contract ERC20",
            "numberOfBytes": "20"
          },
          "t_contract(IMinter)2625": {
            "label": "contract IMinter",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(NewProject)1749_storage)": {
            "label": "mapping(uint256 => struct CHECKToken.NewProject)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Project)1762_storage)": {
            "label": "mapping(uint256 => struct CHECKToken.Project)",
            "numberOfBytes": "32"
          },
          "t_struct(NewProject)1749_storage": {
            "label": "struct CHECKToken.NewProject",
            "members": [
              {
                "label": "params",
                "type": "t_struct(Project)1762_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "timeStart",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "actionTaken",
                "type": "t_bool",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "countYes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "countNo",
                "type": "t_uint256",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "voted",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "10"
              }
            ],
            "numberOfBytes": "352"
          },
          "t_struct(Project)1762_storage": {
            "label": "struct CHECKToken.Project",
            "members": [
              {
                "label": "maintainer",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "period",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "minted",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "cancelled",
                "type": "t_bool",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:38",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:45",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "708f0d2f62f4e4477dbdc8b4355ad2576017966f4213ee07bf86d5e252a35327": {
      "address": "0x006e231D09587537a38007353e9118aB16Fb2A1d",
      "txHash": "0x87c1c13fb91e74ace697a910d651ef6fe5ef669c2d56c28b4ea8585f9509dd35",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "ara",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IERC20)1224",
            "contract": "ContributorDeposit",
            "src": "contracts\\ContributorDeposit.sol:15"
          },
          {
            "label": "main",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IERC20)1224",
            "contract": "ContributorDeposit",
            "src": "contracts\\ContributorDeposit.sol:16"
          },
          {
            "label": "deposits",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_struct(Deposit)1304_storage)",
            "contract": "ContributorDeposit",
            "src": "contracts\\ContributorDeposit.sol:25"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)65_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_contract(IERC20)1224": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_struct(Deposit)1304_storage)": {
            "label": "mapping(address => struct ContributorDeposit.Deposit)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Deposit)1304_storage": {
            "label": "struct ContributorDeposit.Deposit",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "projectId",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "checkProjectId",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "taskId",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "f2f8da868d7e2eed75d12a07d1ed1b68547b276a293e07702a78f645f3783731": {
      "address": "0x8E63C0c8Ae3f512613cBfaA3335E951bD048a0b6",
      "txHash": "0x7db4a1fe2eb06ce193ecb8e3674f5b1eb23236319a7de9ca78a08685d1fbc369",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "ara",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IERC20)1224",
            "contract": "ContributorDeposit",
            "src": "contracts\\ContributorDeposit.sol:15"
          },
          {
            "label": "main",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IERC20)1224",
            "contract": "ContributorDeposit",
            "src": "contracts\\ContributorDeposit.sol:16"
          },
          {
            "label": "deposits",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_struct(Deposit)1304_storage)",
            "contract": "ContributorDeposit",
            "src": "contracts\\ContributorDeposit.sol:25"
          },
          {
            "label": "reverseDeposits",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_string_memory_ptr,t_mapping(t_string_memory_ptr,t_mapping(t_string_memory_ptr,t_address)))",
            "contract": "ContributorDeposit",
            "src": "contracts\\ContributorDeposit.sol:27"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)65_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_contract(IERC20)1224": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_struct(Deposit)1304_storage)": {
            "label": "mapping(address => struct ContributorDeposit.Deposit)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_address)": {
            "label": "mapping(string => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_mapping(t_string_memory_ptr,t_address))": {
            "label": "mapping(string => mapping(string => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_mapping(t_string_memory_ptr,t_mapping(t_string_memory_ptr,t_address)))": {
            "label": "mapping(string => mapping(string => mapping(string => address)))",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Deposit)1304_storage": {
            "label": "struct ContributorDeposit.Deposit",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "projectId",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "checkProjectId",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "taskId",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    }
  }
}
